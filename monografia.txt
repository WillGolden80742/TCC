1 INTRODUÇÃO
É de clara percepção que estamos vivendo uma época de grande evolução
por parte tecnológica. Em grandes metrópoles, é possível ver que existem muitas
acessibilidades para o público geral, desde atendimentos virtuais por máquinas, até
mesmo por acessibilidade de locomoção. No ano de 2000, foram criadas duas leis
(Nº10.098 e Nº 10.048) que trata da acessibilidade espacial das pessoas com
deficiência, que busca eliminar barreiras arquitetônicas e de atitude que reduzam,
retardem e impeçam a inclusão social (Brasil, 2000).
Segundo o IBGE, 3,4% da população com dois anos ou mais de idade
declararam ter muita dificuldade ou que não conseguiam enxergar de modo algum, o
que correspondia a 6,9 milhões de brasileiros com deficiência visual, sendo de 2,7%
na população masculina e de 4% na feminina. Porém, lamentavelmente, ainda
muitas dessas pessoas deixam de conhecer a nossa cultura e não se sentem
inclusas (Agência Brasil, 2021).
Para diminuir essa desigualdade, em 2015 foi promulgada a lei nº 13.146 que
defende diversos direitos das pessoas com deficiência, incluindo no artigo 42 a
ratificações do direito à cultura (BRASIL, 2015). Contudo, ainda pode-se perceber a
necessidade do desenvolvimento de soluções que proporcionem as pessoas com
deficiência um melhor acesso a ambientes culturais, independentemente de qual
seja a condição dela, fornecendo-as algo desenvolvido especificamente para esse
grupo. O nosso foco se dá no desenvolvimento de um software ou aplicação
adaptada que permita a Pessoa com Deficiência visual um melhor aproveitamento
de experiências culturais, sendo oferecida através de um aplicativo de celular,
providenciando a eles uma maior autonomia. Em vista disso, esse público poderá
ser guiado para conhecer esse ambiente cultural.
Deste modo, nosso objetivo é por meio de uma aplicação mobile apresentar
uma solução que envolve a independência e inclusão de uma Pessoa com
Deficiência visual em um ambiente cultural.
Segundo Vanderheiden (2008) o objetivo de uma solução em tecnologia
assistiva é habilitar qualquer um, em qualquer lugar, para ser capaz de utilizar os
serviços que necessitam em qualquer computador/dispositivo que encontrarem.11
Tal objetivo será atingido por meio de um sistema que informará aos mesmos
as atrações que estão em seu entorno ao chegar a uma distância específica do
local, iniciando uma audiodescrição detalhando informações sobre o ponto turístico.
A relevância do nosso trabalho se dá pela importância da tentativa de
inclusão de indivíduos portadores de deficiência visual na sociedade, permitindo a
eles o acesso a conteúdo culturais.
12
1.1 OBJETIVOS
1.1.1 OBJETIVO GERAL
Desenvolver uma aplicação mobile que informa a Pessoa com Deficiência
visual que esteja em um ambiente cultural, acerca de monumentos, exposições em
sua proximidade e traga informações auditivas e detalhadas sobre o local.
1.1.2 OBJETIVOS ESPECÍFICOS
● Desenvolver um servidor de banco de dados com o objetivo de administrar
e centralizar o gerenciamento de audiodescrições de locais culturais no
âmbito urbano.
● Criar uma função que, a partir da solicitação, faça a audiodescrição para o
usuário com deficiência visual, acerca de um local histórico por exemplo,
permitindo sua melhor compreensão.
● Programar um aplicativo Mobile com uma interface amigável às
necessidades de uma Pessoa com Deficiência visual.
● Desenvolver um software para interação entre um ambiente físico e nossa
aplicação mobile para identificação de objetos.13
1.2 JUSTIFICATIVA
A implementação de uma tecnologia mais atual em ambientes culturais, tal
como um parque, museu, é de fundamental importância. É perceptível que a
porcentagem de pessoas com deficiência visual que vão a espaços culturais é muito
baixa, pois muitas vezes não se tem o devido conhecimento sobre o local. Portanto,
com uma aplicação mobile servindo de apoio, é um incentivo que queremos criar
para essas pessoas irem para esses locais, pois, cresceria o conhecimento das
artes e histórias, e ainda ampliaria o saber na nossa sociedade. Com a modelagem
e desenvolvimento desta aplicação, podemos aplicar conhecimentos adquiridos em
nossa trajetória acadêmica relacionado a matérias como: Ciência da Computação
Interdisciplinar, Banco de Dados, Linguagem de Programação e Engenharia de
Software. Desta forma, foi possível ampliar com muito êxito nossos conhecimentos
em relação as matérias citadas acima e ainda ajudar em uma causa social que
envolve um grupo de pessoas que se sentem excluídas da sociedade em geral.14
2 REFERENCIAL TEÓRICO
Neste
capítulo
serão
apresentados
conceitos
sobre,
Java,
GPS/Geolocalização, Android, PHP e banco de dados, estes recursos foram
utilizados para o desenvolvimento deste trabalho.
2.1 JAVA
Dada a necessidade de programarmos em mobile, foi utilizada da linguagem
Java para o desenvolvimento no Android Studio. Uma boa definição dada pelo
próprio site do próprio Java:
Java é uma linguagem de programação e plataforma de computação
liberada pela primeira vez pela Sun Microsystems em 1995. De um início
humilde, ela evoluiu para uma grande participação no mundo digital dos
dias atuais, oferecendo a plataforma confiável na qual muitos serviços e
aplicativos são desenvolvidos. (JAVA, p. 1).
Para a base de nossa aplicação, escolhemos utilizar da Linguagem de
Programação Java devido a sua adaptabilidade e robustez, "To fully understand
Java, one must understand the reasons behind its creation, the forces that shaped it,
and the legacy that it inherits"("Para entendermos Java, é preciso entender as
razões de sua criação e as forças que o moldaram e o legado que ele herda").
(Schildt, 2020, p. 3, tradução nossa).
Java é uma linguagem de programação orientada a objetos influenciada por
C++, possui uma sintaxe derivada de C, em suma várias das características se
assemelham a estas duas linguagens. Para entendermos melhor como funciona o
código em Java Segundo a Microsoft:
O código Java escrito para uma plataforma, como o sistema operativo
Windows, pode ser facilmente transferido para outra plataforma, como um
SO de telemóvel, e vice-versa sem ser completamente reescrito. O Java
funciona em várias plataformas porque, quando um programa Java é
compilado, o compilador cria um ficheiro de bytecode .class que pode ser
executado em qualquer sistema operativo que tenha a máquina virtual de
Java (JVM) instalada. (Microsoft, p. 1).15
Figura 1 — Java Virtual Machine
Fonte: DevMedia..
O Java faz valer de seu lema de "Write Once, Run Anywhere"("Escreva uma
vez, execute em qualquer lugar"). Portanto, em nossa aplicação faremos o uso dele
na estruturação do escopo da aplicação mobile.
2.1.1 Cálculo da distância até monumento
Em nossa aplicação, o Java também foi utilizado para calcular a distância
entre os monumentos, onde considerando a terra uma esfera podemos calcular essa
distância utilizando da equação de haversine.
Sanches (2012) afirma que uma esfera de raio unitário, um triângulo esférico
na superfície da esfera formado pelos pontos 𝑢, 𝑣 e 𝑤, é definido por grandes
círculos, ou seja, círculos que dividem a esfera em dois hemisférios conforme
mostrado na Figura 1.16
Tessari (2010) aborda que para calcular distâncias em métodos de
navegação, utiliza-se a fórmula básica de trigonometria. A fórmula de haversine
calcula a distância entre dois pontos através das coordenadas (latitude e longitude).
No entanto, ignora altitudes, levando em consideração a circunferência da Terra.
Figura 2 — Triângulo Esférico
Fonte: Sanches (2012, p. 69).
Na Figura 2, se o comprimento dos três lados são 𝑎 (de 𝑢 até 𝑣), 𝑏 (de 𝑢 até
𝑤) e 𝑐 (de 𝑣 até 𝑤), e o ângulo oposto ao arco 𝑐 é 𝐶, segundo Sanches (2012) a lei
de haversine é definida pela função abaixo:
ℎ𝑎𝑣𝑒𝑟𝑠𝑖𝑛(𝑐) = ℎ𝑎𝑣𝑒𝑟𝑠𝑖𝑛 (𝑎 − 𝑏) + 𝑠𝑒𝑛(𝑎) 𝑠𝑒𝑛(𝑏) ℎ𝑎𝑣𝑒𝑟𝑠𝑖𝑛(𝑐) (1)
Segundo Campos (2017), a fórmula de haversine deriva da lei dos
haversines, a partir de um “triangulo” na superfície de uma esfera representada
pelos pontos 𝑢, 𝑣 e 𝑤 (Figura 2), sendo o comprimento, 𝑢 até 𝑤 seja igual a 𝑏 e de 𝑤
até 𝑣 seja 𝑐, e que o ângulo oposto a 𝑐 seja 𝑐. Seja 𝑢 o polo norte, enquanto 𝑣 e 𝑤 as
coordenadas que desejamos saber a distância, 𝑎 e 𝑏 valem 𝜋/2 – 𝛷, c a diferença
entre as 𝜆 (𝛥𝜆) e 𝑐 e 𝑑/𝑟, como sendo (𝜋/2 – 𝛷) = 𝑐𝑜𝑠(𝛷), então a fórmula de
haversine é determinada, aplicando para o valor do 𝑟 6371 quilômetros (corresponde
à média do raio da Terra).17
Figura 3 — Arco de comprimento de a
Fonte: Sanches (2012, p. 70).
Lyra (2021) explica que a prova pode ser obtida utilizando a equação de arco
de circunferência.
𝑎 = 𝛼𝑅
(2)
Considerando 𝑅 = 1, então
𝑎=𝛼
(3)
Para se obter a fórmula de haversine, algumas considerações devem ser
feitas:
• 𝑢 é considerado o ponto correspondente o polo norte da Terra (latitude 90°),
• 𝑣 e 𝑤 são dois pontos cuja distância 𝑑 será determinada,
• 𝐶 é a diferença de longitude que separa 𝑣 e 𝑤,
• 𝑐 é o comprimento 𝑑/𝑅 desejado,
• 𝑅 é o raio da Terra.
Desta forma, pode-se reescrever a Lei dos haversines mostrada na fórmula
(1) da seguinte maneira:
ℎ𝑎𝑣𝑒𝑟𝑠𝑖𝑛𝑒 𝑑/𝑅 = ℎ𝑎𝑣𝑒𝑟𝑠𝑖𝑛𝑒 (∅2 − ∅1 ) + 𝑠𝑒𝑛 ( 𝜋/2 − ∅1) 𝑠𝑒𝑛 ( 𝜋/2 − ∅2)
ℎ𝑎𝑣𝑒𝑟𝑠𝑖𝑛𝑒 (ℷ2 − ℷ1)
(4)
A fórmula haversine ℎ𝑎𝑣(𝛩), aplicada acima para ambos o ângulo central 𝛩 e
a diferenças na latitude e longitude é:
ℎ𝑎𝑣(𝜃) = 𝑠𝑒𝑛² (𝜃/2)
(5)18
Renomeando,
ℎ = ℎ𝑎𝑣𝑒𝑟𝑠𝑖𝑛𝑒 (𝑑/𝑅)
(6)
Segundo Lyra (2021), a fórmula haversine calcula metade da versine do
ângulo 𝜃, resolvendo pela distância d, e aplicando o arc versine (haversine inverso)
para ℎ = ℎ𝑎𝑣(𝛩), ainda pode ser aplicado o uso da função arco seno (inverso do
seno)
𝑑 = 𝑅 ℎ𝑎𝑣𝑒𝑟𝑠𝑖𝑛𝑒⁻¹(ℎ) = 2 𝑅 𝑎𝑟𝑐𝑠𝑒𝑛 √ℎ
(7)
Desta maneira substituindo as equações (5), (6), (7) na equação (4) obtém-se
a fórmula de haversine, mostrado aqui na equação (8)
𝑑 = 2𝑅 𝑎𝑟𝑐𝑠𝑒𝑛 √𝑠𝑒𝑛² ((∅2−∅1)/2)+ cos(∅1) cos(∅2) 𝑠𝑒𝑛² ((ℷ2−ℷ1)2)
(8)
onde:
• 𝑑 é a distância entre dois pontos na superfície da esfera, em quilômetros,
• 𝑅 é o raio da esfera, em quilômetros,
• ∅1, ∅2 são a latitude do ponto 1 e a latitude do ponto 2 (em radianos),
• ℷ2 e ℷ1 são a longitude do ponto 1 e longitude do ponto 2 (em radianos).
Convertemos esta equação (8) em código java para conseguirmos calcular
uma distância precisa entre dois pontos, sendo um deles a localização do usuário e
o outro ponto a localização do monumento.
2.1.2 CONNECTIONFACTORY
Em determinado momento de nossa aplicação, gostaríamos de ter o controle
sobre a construção dos objetos da nossa classe. Muito pode ser feito através do
construtor, como saber quantos objetos foram instanciados ou fazer o log sobre
essas instanciações
Assim, sempre que quisermos obter uma conexão com a base de dados no
nosso código, usaremos o comando a seguir:
•
Connection con = new ConnectionFactory().getConnection();
Em Alura (2022) é dito que getConnection() é uma fábrica de conexões, isto
é, ele cria novas conexões para nós. Basta invocar o método e recebemos uma19
conexão pronta para uso, não importando de onde ela veio e eventuais detalhes de
criação. Portanto, vamos chamar a classe de ConnectionFactory e o método de
getConnection.
2.2 ANDROID
Para desenvolvimento da aplicação mobile será necessário o uso do sistema
operacional Android. "O sistema operacional Android foi desenvolvido pela Android,
Inc., a qual foi adquirida pelo Google em 2005. Em 2007, foi formada a Open
Handset AllianceTM - que agora tem 84 membros para desenvolver e aprimorar o
android" (Deitel, 2015, p. 7).
O Android é um ambiente de software escrito para dispositivos móveis. Não
é uma plataforma de hardware. O Android inclui um Sistema Operacional
(OS) baseado em um kernel Linux, uma rica interface de Usuário (IU),
aplicativos de usuário, bibliotecas de código, frameworks de aplicativo,
suporte a multimídia [...] os componentes do OS estão escritos em C ou
C++, os aplicativos são escritos em Java para Android. Mesmo os
Aplicativos embutidos são escritos em Java. (ABLESON et al., 2012, p. 4).
O desenvolvimento de aplicativos de Android é feito por meio de um SDK
(Software Development Kit) (Kit de Desenvolvimento de Software) que disponibiliza
as ferramentas necessárias para criarmos uma aplicação Android, faremos uso da
IDE Android Studio.
Lecheta (2013) aborda que o SDK tem um emulador para simular o celular,
ferramentas utilitárias e uma API completa para a linguagem Java, com todas as
classes necessárias para desenvolver as aplicações.
Segundo o site Oficial do Android Studio, "O Android Studio é o ambiente de
desenvolvimento integrado oficial do Android. Criado especificamente para esse SO,
ele acelera o desenvolvimento e ajuda a criar apps da mais alta qualidade para
todos os dispositivos Android." (Developers Android, p. 1).
Em nossa aplicação, utilizamos de criação de telas, recursos nativos do
mobile como reprodução de som, que em nossa aplicação são as audiodescrições e
do GPS nativo do celular.
2.2.1 Obtenção das coordenadas do GPS20
Segundo Meurer (2012) Para a obtenção das coordenadas de GPS, são
utilizados dois objetos nativos da própria SDK chamados “LocationManager” e
“LocationListener”, destinados ao tratamento deste recurso.
2.2.1.1 LocationManager
Google Developers (2021) aborda que LocationManager é o responsável por
gerenciar o serviço do sistema GPS, que permite adicionar listeners de status do
serviço, alertas de proximidade de pontos de referência ou pontos especificados
através de coordenadas e o principal recurso deste objeto, que é a requisição de
atualização da localização através do método requestLocationUpdates()
2.2.1.2 LocationListener
Android Developers (2021) cita que esses métodos são usados para receber
notificações quando a localização do dispositivo foi alterada. Eles são chamados
quando o ouvinte é registrado no LocationManager. Nesse método, é definido e
implementado o segundo objeto que é um listener para o tratamento dos dados
obtidos pelo GPS e do estado do recurso, sendo possível estar desativado, ativado
ou ter sofrido outros tipos de alteração.
2.2.2 Reprodução de áudio
Google Developers (2019) aborda que um dos componentes mais importantes
do framework de mídia é a classe MediaPlayer. Um objeto dessa classe pode
buscar, decodificar e reproduzir áudio e vídeo com uma quantidade mínima de
configuração. Criamos a Classe AudioControler e por meio dela utilizamos dos
métodos da classe MediaPlayer.21
2.3 GPS
Sendo um sistema de satélites onde os dispositivos têm por princípio prestar
as informações o mais precisa possível sobre o posicionamento de um determinado
local ou dispositivo.
Segundo Cubas e Taveira a definição de um GPS se dá por:
“Trata-se de um sistema computacional que processa dados gráficos e não
gráficos (alfanuméricos) com ênfase em análises espaciais e modelagens
de superfícies. O SIG é uma das geotecnologias existentes que unem
hardware e software”. (Cubas; Taveira, 2020, p. 146).
Com isso ao se pensar em um Sistema de Informação Geográfico, se tem a
soma de cinco componentes que tem a interação como um todo software, hardware,
banco de dados, usuários e método.
Figura 4 — Componentes de um SIG
Fonte: Cubas e Taveira (2020, p. 121).
Tendo características especificas, os SIGs se tornam de extrema importância
ao se tratar de localização. Com estruturas de dados e representação em camadas,
seu
método
de
representação
(CUBAS; TAVEIRA, 2020).
torna
a
geolocalização
mais
prática22
2.3.1 COMPONENTES NECESSÁRIOS (GPS)
O GPS é dividido em três grandes segmentos, Segmento Espacial, Segmento
de Controle Terrestre e Segmento do Usuário (Silva, 2020).
Figura 5 — Segmento do Sistema
Fonte: Zanotta, Cappelletto e Matsuoka (2011, p. 3).
Segundo Silva (2020) em questão dos espaciais, tende-se de componentes
os satélites, onde sua distribuição em orbita garante que sempre haja conexão com
os outros componentes. Em segundo, as estações de controle buscam esta conexão
e sincronização. Por fim, com relação ao utilizador, se tem a captação deste sinal
por um receptor GPS, do qual calcula a sua posição.
Rousseau e Saint-aubin (2015) explicam também que o GPS consiste em 32
satélites, dos quais pelo menos 24 estão em funcionamento, enquanto os outros
encontram-se prontos para entrar em ação caso algum satélite falhe. Os satélites
estão posicionados a 20.200 km da superfície da Terra. Estão distribuídos por seis
planos orbitais, cada um inclinado a 55 graus em relação ao plano equatorial como
mostrado na figura 5.23
Figura 6 — Os 24 satélites sobre as seis órbitas planas
Fonte: Moraes (2015, p. 16).
2.4 PHP
O PHP é a ferramenta de integração do projeto, conectando o Banco de
dados, e o cliente em Android que faz a ele solicitações. Portanto, é importante
definir o que é PHP e seu contexto histórico:
A Linguagem de programação PHP, surgiu no ano de 1994 desenvolvida
pelo programador canadense-dinamarquês Rasmus Lerdorf, no início está
sigla significava Personal Home Page Tools, era uma linguagem formada
por um conjunto de scripts em linguagem C, voltados para à criação de
páginas dinâmicas que Rasmus usava para visualizar e monitorar seu
currículo na internet. Com o passar do tempo, mais pessoas quiseram
utilizar dessa ferramenta e Rasmus foi adicionando recursos, como a
interação com banco de dados. Em 1995, o código-fonte do PHP foi
liberado, dando espaço para diversos desenvolvedores se juntarem ao
projeto e naquele período o PHP ficou conhecido como FI (Forms
Interpreter) (Dall´Oglio, 2015, p. 21).
No início o PHP era apenas formado por scripts em C que o criador do PHP
usava para monitorar na Web o acesso de seu currículo, porém com o crescimento
em 1997 foi criada uma segunda versão que naquele momento 1% de toda a
internet utilizava do PHP, que até então era mantido apenas por Rasmus.
O rumo da linguagem se deu quando:
"neste ano também que Andi Gutmans e Zeev Suraski, estudantes que
usavam da linguagem em um projeto acadêmico de comércio eletrônico se
juntaram a Rasmus para aprimorar o PHP. Que oficialmente foi lançado em
98 tendo entre suas principais novas características o suporte à orientação
a objetos, a extensibilidade, a possibilidade de se conectar com diversos
bancos de dados ao mesmo tempo, novos protocolos, uma sintaxe mais
consistente e uma nova API que permitia a criação de novos módulos. Foi
nesta época que sua sigla passou a PHP: Hypertext Preprocessor uma
linguagem com propósitos mais amplos." (Dall´Oglio, 2015, p. 22).24
Com isso PHP já não era apenas uma criação de formulários, se tornou uma
linguagem orientada a objetos com uma boa robustez, suporte à conexão com mais
de um banco de dados.
"E em 2000 foi lançada a versão PHP 4, baseado numa versão reescrita do
núcleo do PHP batizada de Zend Engine, que teve como objetivo melhorar
seu desempenho e sua modularidade, o PHP 4 trouxe melhorias tais como
suporte a vários servidores web, seções, além da abstração da sua API,
permitindo por exemplo ser utilizado como linguagem para shell script.
Dadas as necessidades de maior suporte à orientação a objeto em sua
versão PHP 5 foram adicionados recursos contemplar esta função dele, que
foi disponibilizada em 2004. Ao longo deste período todo, o PHP vem se
aperfeiçoando e adicionando mais e mais recursos. Sendo estimado seu
uso em grande parte dos servidores web existente." (Dall´Oglio, 2015, p.
22).
2.4.1 Conexão do PHP com MySQL
Em nosso programa, o PHP desempenhou a função de servidor web, do qual
nossa aplicação mobile busca os dados dos monumentos, como suas coordenadas
e seus dados.
"O que torna esta parceria tão forte e estável é uma combinação de fatores,
como o fato de o MySQL ser um banco fácil de aprender, leve e rápido, o
PHP ser fácil e flexível e ambos possuírem licenças permissivas para uso
pessoal, comercial e em projetos de software livre. PHP torna simples o uso
do MySQL através de funções que conectam, executa código SQL e trazem
os resultados para a aplicação" (BENTO, 2021, p. 65-66).
2.4.1.1 Connection PDO
Segundo o The PHP Group (2006), a extensão PHP Data Objects (PDO)
define uma interface leve e consistente para acessar bancos de dados em PHP.
Cada driver de banco de dados que implementa a interface PDO pode expor
recursos específicos do banco de dados como funções de extensão regulares.
2.4.2 JSON
O JSON é o formato de arquivo que utilizamos para a troca de informações
entre o servidor e o cliente, podemos citar uma boa definição com a Plataforma
DEVMEDIA que define como "JSON é basicamente um formato leve de troca de
informações/dados entre sistemas." (DEVMEDIA, 2011).25
2.5 BANCO DE DADOS
Um bom contexto histórico do que é um modelo de banco de dados pode ser
dada pelo Professor de Banco de Dados Felipe Nery que em seu livro “Banco de
Dados: Projeto e Implementação” diz que:
"Historicamente, os primeiros modelos de banco de dados datam da
década de 1960. Desde então, a pesquisa científica na área procura evoluir
no sentido de definir, encontrar modelos que representem da melhor
maneira possível os dados de uma realidade, ou seja, que organizem os
dados de uma forma mais próxima da maneira como são vistos e
manipulados pelas pessoas no mundo real." (Machado, 2014, p. 15).
Segundo a Amazon, uma clara definição de Banco de dados se dá por:
Um banco de dados relacional é uma coleção de itens de dados com
relacionamentos predefinidos entre si. Esses itens são organizados como
um conjunto de tabelas com colunas e linhas. As tabelas são usadas para
reter informações sobre os objetos a serem representados no banco de
dados. Cada coluna da tabela retém um determinado tipo de dado e um
campo armazena o valor em si de um atributo. As linhas na tabela
representam uma coleção de valores relacionados de um objeto ou de uma
entidade. Cada linha em uma tabela pode ser marcada com um único
identificador chamado de chave principal. Já as linhas entre as várias
tabelas podem ser associadas usando chaves estrangeiras. Esses dados
podem ser acessados de várias maneiras diferentes sem reorganizar as
próprias tabelas do banco de dados (AMAZON, p. 1).
Em nosso sistema utilizamos do Banco de Dados para armazenar as
Audiodescrições dos monumentos e estatuas do Parque Ibirapuera que utilizamos
como referencial e para entendermos o que é um Banco de Dados é preciso recorrer
a definição dada por Jan L. Harrigton Expert em Gerenciamento de Banco de Dados
e autor do livro "relational database: design and implementation"("Banco de Dados
Relacional: Design e Implementação") que sobre o assunto que tem com definição
fundamental:
"There are things in a business environment about which we need to store
data, and those things are related to another in a variety of ways. In fact, to
be considered a database, the place where data are stored must contain not
only the data but also information about the relationships between those
data." (Harrington, 2016).
Com este texto Harrington quis dizer que um dado armazenado sem suas
relações não pode ser considerado um Banco de dados efetivo, pois, o espaço que26
conter os dados deve conter também as relações entre esses dados (tradução
nossa).
2.5.1 O que é SQL?
Segundo Milani (2016), A sigla SQL abrevia o termo Structure Query
Language (em português, Linguagem de consulta), que é o nome dado à linguagem
responsável pela interação com os dados armazenados na maioria dos bancos
relacionais.
Em Banco de Dados Avançado, Aléssio (2015) aborda que os recursos dessa
linguagem são divididos em:
● Linguagem de definição de dados ou LDD (ou DDL, do inglês), com
comandos como CREATE, DROP e ALTER TABLE;
● Linguagem de manipulação de dados, ou LMD (ou DML, do inglês), com
comandos como UPDATE, SELECT, INSERT e DELETE;
● Linguagem de controle de dados, ou LCD, com comandos para controle
de acesso dos usuários do sistema, como GRANT e REVOKE em SQL.
2.5.2 MySQL
O SGBD escolhido para nosso projeto é o MySQL e está escolha se dá por
ele ser uma ferramenta gratuita dentre outras qualidades citadas também no livro
"MySQL: Comece com o principal banco de dados open source do mercado" de
Vinicius Carvalho que diz nele "Ao escolher o MySQL como opção de Sistema
Gerenciador de Banco de Dados (SGBD), além de uma ferramenta gratuita criada
na base de licença de software livre, você também está optando por qualidade,
robustez e segurança" (Carvalho, 2015, p. 10).
Segundo a Oracle (2022), o banco de dados MySQL é um sistema
cliente/servidor que consiste em um servidor SQL multi thread que suporta
diferentes back-ends, vários programas e bibliotecas clientes diferentes, ferramentas
administrativas e uma ampla gama de interfaces de programação de aplicativos
(APIs).27
Figura 7 — Características do MySQL
Fonte: Carvalho (2015, p. 12).28
3 METODOLOGIA
Em nossa pesquisa analisando os objetivos definidos decorrentes de vários
debates selecionamos as opções mais viáveis em relação ao uso de uma aplicação
em um local que não seja residencial e o usuário não tenha o Wi-Fi disponível.
Desta forma, criamos uma aplicação que ao realizar o download e iniciar pela
primeira vez, em segundo plano é feita a transferência dos arquivos de
audiodescrições disponíveis, tornando o aplicativo mais intuitivo ao seu uso e com a
finalidade de transmitir a informação de forma clara.
Figura 8 — Protótipo Inicial
Fonte: Os autores (2022).
A aplicação conta com um histórico de audiodescrições já reproduzidas, o
botão de reprodução e uma barra de pesquisas que conta com o botão de pesquisa
por voz. Esta imagem foi nossa primeira prototipação do sistema.29
Chegamos ao consenso de utilizar uma aplicação mobile que integrasse o
GPS com um Banco de Dados, sendo acionada ao entrar em um espaço entorno do
objeto e é transmitida a audiodescrição.
Para termos uma noção do sistema de leitura, simulamos a função de
coordenada do aplicativo mobile. Para alcançar uma visão clara sobre a precisão do
sistema, fizemos 25 testes dentro de uma distância de 7 metros, onde seria medido
o 1º extremo de uma sala, o meio e o extremo oposto da sala. Após fazermos os
testes, chegamos a esses dados:30
Figura 9 — Registros de dados Obtidos
Fonte: Os autores (2022).
Com esses dados, elaboramos um gráfico com os dados que ajudassem a
visualizar melhor a precisão do GPS:31
Figura 10 — Gráfico de Demonstração de Precisão
Fonte: Os autores (2022).
Nesse gráfico está representado, além das respectivas posições, a
localização de real sistema móvel. É perceptível, que por mais que existam
imprecisões, cada ponto possui distintas posições, mas pelo que é mostrado acima,
um espaço de apenas 7 metros não é o suficiente para distinguirmos com clareza
suas respectivas posições. Por isso pretendemos projetar um sistema que tenha
uma precisão em torno de 5 a 7 metros para cada objeto que ele rastrear.
Distribuindo em três posições, considerando 7 metros, teríamos uma
extensão de 21 metros.32
Figura 11 — Segundo teste de precisão
Fonte: Os autores (2022).
Após tentarmos determinar qual nível de precisão, discutimos sobre a
dificuldade de precisão encontrada em uma escala pequena e como isso seria
dificultoso para o desenvolvimento do nosso sistema. Com isso, mudamos o foco
para ambientes de espaços abertos com um tamanho razoável para a precisão do
GPS.
Porém, depois de uma sequência de testes, notamos que a medição das
distâncias da nossa aplicação para lugares fechados, seria muito imprecisa, com
isso, optamos por mudar para um espaço cultural mais amplo e utilizamos do33
Ibirapuera como base para um ambiente cultural dada as suas obras espalhadas
pelo parque.
Após decidirmos em qual ambiente atuaríamos, precisávamos definir de qual
forma seria o acionamento do sistema, como sistema GPS utiliza coordenadas para
definir posição, precisávamos também, armazenar os dados de todos os espaços ou
monumentos culturais, para a partir de nossa posição atual, termos uma noção da
proximidade desses objetos almejados.
3.1 REQUISITOS
O projeto foi desenvolvido com uma grande preocupação para entregar as
informações com clareza ao usuário que possui deficiência visual. Em decorrência
disso, os requisitos documentados abaixo evidenciam os pontos cruciais para o
funcionamento da aplicação adotados pela equipe.
3.1.1 REQUISITOS FUNCIONAIS
[RF1] A aplicação deve encontrar e informar objetos, locais, pontos turísticos
próximos ao usuário.
Descrição: Com base nos recursos de geolocalização, e dados móveis, o
sistema da aplicação deverá detectar objetos, locais e pontos turísticos próximos ao
usuário e informá-lo sobre.
Importância :Alta
[RF2]
A
aplicação
deve
localizar
novas
obras,
objetos,
locais
e
monumentos quando acabar a transcrição de alguma obra, objeto, locais,
monumentos, para que se dirija a outra.
Descrição: Com base nos recursos de geolocalização, e dados móveis, o
sistema da aplicação deve notificar o usuário para dirigir-se a uma nova atração.
Importância: Alta
[RF3] O sistema deverá realizar a busca de monumentos próximos.34
Descrição: Para otimizar o uso de bateria e dados móveis, enquanto ocorre a
reprodução das transcrições de áudio, o aparelho localiza novas obras próximas ao
usuário.
Importância :Alta
[RF4] A partir de determinado espaço definido (15 metros), a aplicação deve
executar audiodescrição da obra, objeto, locais, monumentos.
Descrição: Ao se aproximar de uma obra, objeto, local cultural, ou
monumentos, a aplicação deve reproduzir a informação de que está próximo de um
objeto que está cadastrado no sistema da aplicação, e reproduzi-lo em seguida.
Importância: Alta
[RF5] A aplicação deve reproduzir as audiodescrições.
Descrição: Com o objetivo de facilitar o acesso à informação das obras,
locais, objetos, locais culturais, ou monumentos, a aplicação deverá reproduzir o
áudio das transcrições das obras próximas ao usuário de forma clara e de fácil
entendimento.
Importância: Alta
[RF6] O sistema será utilizado com base em cálculo de coordenadas (latitude
e longitude) para localização do usuário.
Descrição:
Para
melhor
precisão
de
localização
do
usuário,
a
aplicação deverá utilizar os serviços de GPS do dispositivo com apoio dos
cálculos desenvolvidos no escopo do projeto.
Importância: Alta
[RF7] A aplicação emitira uma notificação sonora ao usuário quando estiver
se aproximando a alguma obra, objeto, locais, monumentos.
Descrição: Para informar o usuário com deficiência visual, a aplicação deverá
utilizar os serviços de notificação do dispositivo mobile para que ele possa estar
deixando o local e dirija-se a uma nova obra.
Importância: Alta
[RF8] O sistema deverá informar quando a aplicação estiver offline.
Descrição: Conforme o usuário utilize a aplicação, e ocorra de o
dispositivo não possuir dados móveis, a aplicação deverá notificar a perda de sinal.
Importância: Mediano35
[RF9] O sistema deverá realizar um cálculo aproximado das coordenadas com
base nos dados móveis, e a última localização válida caso ocorra perda de sinal de
GPS.
Descrição: Conforme o usuário utilize a aplicação, e ocorra de o
dispositivo não possuir sinal de GPS, a aplicação deverá notificar o usuário a perda
de sinal.
Importância: Alta
3.1.2 REQUISITOS NÃO FUNCIONAIS
[RNF1] A aplicação deverá ter um tempo de carregamento dos áudios de no
máximo 5 segundos.
Descrição: Para a navegação das principais telas e funcionalidades, o tempo
de execução não deve ultrapassar 5 segundos, priorizando a otimização.
Importância: Alta
[RNF2] A aplicação deverá manter o GPS, e dados móveis ativados para
localização dos monumentos próximos aos usuários.
Descrição: Para melhor disponibilidade das informações, e precisão do local,
a aplicação deve ativar os recursos de Dados móveis, e GPS do dispositivo mobile
para que consiga desempenhar suas funcionalidades definidas.
Importância: Alta
[RNF3] A aplicação deverá manter em cache todos os arquivos de
audiodescrição dos monumentos próximos aos usuários.
Descrição: Para um melhor funcionamento da aplicação, é necessário que a
aplicação realize o download das obras, objetos, locais, monumentos, e mantenha
em cache no sistema do dispositivo mobile para reproduzir as transcrições em áudio.
Importância: Alta
[RNF4] Todas as audiodescrições devem estar disponíveis caso o aparelho
esteja sem dados móveis próximo a algum monumento, e informar por vibração
quando o usuário se aproximar de algum objeto, local, monumento.
Descrição: Para melhorar a experiência de usabilidade da aplicação, ela
deverá utilizar recursos físicos e de software do dispositivo mobile para reprodução
das transcrições em áudio.36
Importância: Alta
[RNF5] O Back-end da aplicação deverá ser desenvolvido na plataforma
PHP.
Descrição: Por definição de escopo de projeto, nossa aplicação será
desenvolvida com o uso da plataforma PHP
Importância: Alta
[RNF6] O sistema deverá conter um banco de dados estruturado em MySQL.
Descrição: Por definição de escopo de projeto, o servidor da aplicação será
desenvolvido com o uso da plataforma PHP, para a hospedagem do banco de
dados.
Importância: Alta
[RNF7] O sistema deve possuir configurações de GPS para precisão da
localização do Usuário.
Descrição: Para aprimorar a precisão da localização do usuário, a aplicação,
deve ligar o recurso de GPS do dispositivo mobile.
Importância: Alta
[RNF8] O sistema deverá possuir um design simples e intuitivo.
Descrição: Devido a aplicação ser voltada a pessoas com deficiência visual,
as funcionalidades da aplicação devem possuir pouca complexidade em sua
usabilidade, e suas informações repassadas em áudio para melhor compreensão.
Importância: Alta
[RNF9] O sistema deverá manter no volume máximo as transcrições de áudio,
enquanto utilizada a aplicação.
Descrição: Devido a aplicação ser voltada a pessoas com deficiência visual, o
recurso de som deve manter o auto falante do dispositivo mobile no volume máximo
para orientar o usuário.
Importância: Alta37
3.2 CASOS DE USO
Filho (2011) aborda que "O objetivo do diagrama de caso de uso é oferecer
uma visão externa do relacionamento entre o sistema e o mundo exterior. "
Partindo desses entendimentos e dos requisitos, conseguimos elaborar os
seguintes casos de uso:
Figura 12 — Diagrama de Casos de Uso
Fonte: Os autores (2022).
Neste diagrama, há dois atores principais: o usuário e o serviço de
monitoração geográfica.
O usuário está interessado em pesquisar pontos turísticos e obter
audiodescrições desses pontos. Para isso, o usuário tem três casos de uso
principais: buscar uma lista de pontos turísticos, pesquisar pontos turísticos e
realizar o primeiro acesso aos dados. Se o usuário já tiver dados em cache, eles são
buscados de lá; se não, são feitas requisições de acesso a escrita e leitura de
dados.38
O serviço de monitoração geográfica tem dois casos de uso principais:
calcular a distância entre o usuário e o ponto turístico, e baixar e reproduzir a
audiodescrição de acordo com a distância.
Figura 13 — Diagrama de Sequência
Fonte: Os autores (2022).
O processo começa quando o usuário inicia o sistema. Em seguida, a tela
principal envia uma mensagem para o cache solicitando a busca de monumentos
armazenados em cache. Se existirem os monumentos, a tela principal receberá um
objeto JSON com as informações. Caso contrário, a tela principal enviará uma
mensagem para a ConnectionFactory solicitando a busca de monumentos e
receberá um objeto JSON com as informações dos monumentos.
Após o recebimento das informações dos monumentos, o sistema iniciará um
loop de 10 segundos para monitorar a distância do usuário em relação aos
monumentos. A tela principal enviará uma mensagem para o Cache solicitando o
cálculo da distância. Se a distância for menor ou igual a 15 metros, a tela principal
enviará uma mensagem para o Cache solicitando a reprodução da audiodescrição
do monumento. Caso contrário, nenhuma ação será realizada. Este processo
continuará até que o usuário encerre o sistema.
3.3 SERVIDOR39
Como nosso sistema cliente pretende realizar todos os cálculos pelo próprio
sistema cliente, nosso servidor é simples, tendo o propósito de apenas armazenar
dados sobre monumentos, como coordenadas, nome, descrição e áudio de
mensagens que orientem o usuário.
3.3.1 DER (Diagrama de Entidade Relacionamento)
No banco de dados incluímos tabelas apenas para armazenar monumentos,
algo que poderia facilmente ser aplicado com sistema NoSQL, mas optamos pela
facilidade de requisitar querys, algo que ajuda na atualização dos dados.
Figura 14 — DER
Fonte: Os autores (2022).
A tabela "MensagensAoUsuario" armazena as mensagens enviadas aos
usuários da aplicação, incluindo o nome do usuário e o arquivo de áudio
correspondente. A chave primária da tabela é o campo "idMensagem", que identifica
de forma única cada mensagem enviada.
A tabela "Monumento" armazena as informações sobre os pontos turísticos
disponíveis para audiodescrição, incluindo o nome do monumento, a latitude e
longitude, uma descrição e o arquivo de áudio com a audiodescrição. A chave
primária da tabela é o campo "idMonumento", que identifica de forma única cada
ponto turístico. Além disso, a tabela possui uma chave única no campo "nome", que
garante que não haja nomes repetidos entre os pontos turísticos.
Essas duas tabelas são importantes para a funcionalidade da aplicação, pois
armazenam as informações necessárias para a audiodescrição de pontos turísticos40
para deficientes visuais. A tabela "MensagensAoUsuario" permite que a aplicação
envie mensagens personalizadas aos usuários, usadas para avisos sobre
permissões e downloads de arquivos, enquanto a tabela "Monumento" armazena as
informações sobre os pontos turísticos disponíveis para audiodescrição.
Figura 15 — Diagrama de Classes - Servidor
Fonte: Os autores (2022).
O diagrama de classes apresentado tem como objetivo representar um
servidor que faz audiodescrição de pontos turísticos para deficientes visuais. O
diagrama consiste em duas classes: ConnectionFactory e Monumentos. A classe
ConnectionFactory tem como atributos o nome do servidor, o nome de usuário, a
senha e o nome do banco de dados, além de métodos para conectar e fechar
conexões, executar consultas e obter resultados. Já a classe Monumentos tem como
atributo uma instância da classe ConnectionFactory e métodos para listar os
monumentos, listar os monumentos por nome e obter a descrição de áudio de um
monumento específico. A relação entre as duas classes é de associação, pois a
classe Monumentos depende da classe ConnectionFactory para se conectar ao
banco de dados e obter os dados necessários.4142
3.4 CLIENTE
Devido as características do nosso sistema, boa parte das tarefas
computacionais são realizadas no cliente.
Figura 16 — Diagrama de Classes - Cliente
Fonte: Os autores (2022).
O diagrama contém cinco classes: AudioController, ConnectionFactory,
Cache, Monumento e Tela Principal.
A classe AudioController controla a reprodução do áudio do ponto turístico
selecionado fornecendo métodos básicos como play(), pause() e stop(). Ele também
armazena informações sobre o nome do arquivo padrão, nome do arquivo atual,
local de armazenamento e instâncias da MediaPlayer e ConnectionFactory.
A classe ConnectionFactory é responsável por estabelecer conexões à base
de dados e obter o conteúdo relacionado ao ponto turístico selecionado. Possui
métodos para oferecer suporte na busca dos dados em formato JSON.
A classe Cache é responsável pelo armazenamento da informação (JSON)
devolvida pela base de dados no dispositivo local. Este armazenamento local servirá43
com uma forma rápida de obter os mesmos dados sem ter que acessar a internet
novamente.
A classe Monumento contém várias informações sobre um determinado
monumento, como nome, longitude, latitude, descrição etc. Ele usará esses detalhes
quando for preciso mostrar informações sobre um determinado monumento no
dispositivo em questão.
A Classe Tela Principal é responsável por administrar e conectar as quatro
outras Classes do aplicativo, disponibilizando os métodos: mostrarMonumentos(),
inserirMonumento(),
reproduzirAudioDescrição(),
executarPararMídia()
e
BuscarMonumentosMaisPróximos(). Estes métodos permitem que, pela classe
principal, seja possível navegar no conteúdo multimídia da aplicação.
Existe uma relação de dependência entre a classe AudioController e
ConnectionFactory, pois a primeira utiliza os métodos disponibilizados pela segunda.
Por fim, há uma relação de associação entre as classes Tela Principal e Cache, pois
a segunda é usada na primeira.
3.5 SISTEMA
Após modelagem do nosso sistema, conseguimos chegar à implementação
das funcionalidades almejadas. Nossa opção foi implementar a funções em cliente
Android mobile e as requisições feitas à um servidor PHP.
No primeiro acesso ao sistema, são feitas as requisições de permissão de
acesso. O sistema Android tem uma interface padrão para solicitar requisições, mas
nos preocupamos em também reproduzir uma mensagem em áudio sobre as
permissões necessárias para o correto funcionamento do nosso sistema.44
Figura 17 — Solicitação das permissões
Fonte: Os autores (2022).
Ao iniciar o sistema, no topo existe um ícone de pesquisa, são apresentadas
as listas de monumentos e logo abaixo também é mostrado o monumento mais
próximo ao usuário.45
Figura 18 — Tela Inicial do Aplicativo
Fonte: Os autores (2022).
Ao selecionar monumento ou atender a condição de próximos, é acionada a
audiodescrição, para usuário que desejam utilizar a interface também é exibida a
descrição por meio de texto.46
Figura 19 — Tela de descrição
Fonte: Os autores (2022).
Caso o usuário queira fazer a busca do sistema, basta tocar na lupa e digitar
o monumento desejado e submeter pesquisa.
Figura 20 — Tela de pesquisa
Fonte: Os autores (2022).47
3.6 ANÁLISE E DISCUSSÃO DE RESULTADOS
Analisando os nossos resultados práticos podemos entender que a
geolocalização possui uma limitação de 5 a 7 metros para identificar algum outro
objeto em seu entorno. Com isso, trabalhamos em desenvolver uma aplicação que
se adeque a está limitação, porém mesmo com essa proximidade ainda estávamos
tendo problemas de precisão, e por conta disso mudamos para um ambiente maior
como o parque Ibirapuera.
A pesquisa sobre o tema geral referente à Pessoa com Deficiência e seus
desafios foi importante para entendermos de que forma poderíamos impactar
positivamente uma Pessoa com Deficiência visual, através dessas pesquisas,
descobrimos o modo de se usar um celular quando se é uma Pessoa com
Deficiência Visual.
Analisando os gráficos também é possível notar que ao se tratar de um
ambiente fechado, o espaço onde for implementado terá que ter uma área
equivalente com o número de objetos documentados no Aplicativo. Por exemplo,
num perímetro de 14 metros quadrados poderiam ser colocados uma exposição,
pois é o que seria suportado, mesmo com isso houve interferência na identificação,
ocorrendo inconsistências ao apresentar os dados e a audiodescrição de um outro
objeto próximo, mas isso foi corrigido utilizando um outro ambiente maior.
Por mais que o sistema possua interface, o sistema tem elementos que
podem tornar mais funcional o uso de Pessoas Com Deficiência visuais. Após o
usuário abrir a primeiro o sistema, basta ele fechar a aplicação, caso haja uma
aproximação suficiente do objeto, é acionada a audiodescrição. A cada 2 horas a
lista de monumento visitado é resetada, caso visite novamente o mesmo local é feita
novamente a reprodução.48
4 CONCLUSÃO
Por meio deste trabalho, foi possível identificar uma necessidade em relação
a um sistema de software que atenda a essa parte da sociedade que não contém
soluções automatizadas no mercado. Sendo assim, um grande desafio para pessoas
com deficiência visual usufruir de pontos turísticos urbanos (Teatros, Museus,
Monumentos, Exposições). Foi pensando nisso, que planejamos e desenvolvemos
esse projeto para auxiliar essa determinada população ao desenvolvimento cultural
com uma aplicação em ambiente mobile, acessível, intuitiva e que contemple o
acesso à informação por audiodescrições para as pessoas com deficiência visual.
No decorrer desse projeto, conseguimos resgatar e pôr em prática diversos
conceitos e metodologias adquiridas durante a formação e aprimoradas conforme
avançamos no desenvolvimento da aplicação. Conseguimos perceber por meio
desse trabalho, a necessidade de aprofundar estudos, a buscar soluções
tecnológicas, e ferramentas que ampliem a acessibilidade, com contato direto a este
público, nos mostrando a importância de analisar o contexto que essa população
está inserida, e desenvolver uma aplicação que consiga atender as limitações físicas
existentes.
Os resultados obtidos através do protótipo, foram fundamentais para o
desenvolvimento final da aplicação, através de lista de requisitos, diagramas,
modelagem e programação.
Todas essas etapas se provaram um grande desafio, com propósito de
conseguirmos incluir essas pessoas a esses ambientes culturais. Onde, mesmo que
possuindo aparelhos telefônicos, é evidente a falta de soluções mobile para atender
essa demanda.49
REFERÊNCIAS
ABLESON, W frank et al. Android em ação. 3 ed. ELSEVIER, 2012.
AGÊNCIA BRASIL. Pessoas com deficiência em 2019 eram 17,3
milhões. Agência Brasil. Rio de Janeiro, 2021. Disponível em:
https://agenciabrasil.ebc.com.br/saude/noticia/2021-08/pessoas-com-deficiencia-em-
2019-eram-173-
milhoes#:~:text=Segundo%20o%20IBGE%2C%203%2C4,e%20de%204%25%20na
%20feminina.. Acesso em: 9 nov. 2022.
ALURA. Apostila Java Web : Banco de Dados e Jdbc. Alura. 2022. Disponível em:
https://www.alura.com.br/apostila-java-web/bancos-de-dados-e-jdbc. Acesso em: 13
nov. 2022.
ALÉSSIO, Simone Cristina. Banco de Dados Avançado. Uniasselvi. 2015. 205 p.
Disponível em:
https://www.uniasselvi.com.br/extranet/layout/request/trilha/materiais/livro/livro.php?c
odigo=19315. Acesso em: 14 dez. 2022.
AMAZON. OQUE É BANCO DE DADOS . AWS Amazon. Disponível em:
https://aws.amazon.com/pt/relational-database/. Acesso em: 9 nov. 2022.
ANDROID DEVELOPERS. Desenvolvedores Android : Documentos, Referência e
LocationListener. Android Developers. 2021. Disponível em:
https://developer.android.com/reference/android/location/LocationListener. Acesso
em: 14 nov. 2022.
BENTO, Evaldo Junior . Desenvolvimento web com PHP e MySQL. Edição
atualizada para PHP 8 ed. Casa do Código, 2021.
BRASIL. Congresso Nacional. Decreto n. 10098, de 18 de dezembro de
2000. Diário Oficial da União, 20 de dezembro de 2000, ano 2000.
BRASIL. Congresso Nacional. Decreto n. 13.146, de 05 de julho de 2015. Diário
Oficial da União: Seção 42, ano 2015.
CAMPOS, D. M. R. BIBLIOTECA DE CRIAÇÃO DE ROTAS ENTRE
COORDENADAS EM AMBIENTES MARÍTIMOS NO SISTEMA BIO DATA. São
Luis, 2017 Dissertação (Mestre em Desenvolvimento de Sistemas e Aplicações/
Engenharia da Computação) - Universidade Estadual do Maranhão.50
CARVALHO, Vinicius. MySQL: Comece com o principal banco de dados open
source do mercado. 1 ed. Casa do Código, 2015.
CREF. Cálculo aproximado de distâncias com base em coordenadas de
latitude e longitude. CREF - Centro de Referência para Ensino de Física. Instituto
de Física da UFRGS, 2021. Disponível em: https://cref.if.ufrgs.br/?contact-
pergunta=calculo-aproximado-de-distancias-com-base-em-coordenadas-de-latitude-
e-longitude. Acesso em: 10 nov. 2022.
CUBAS, Monyra Guttervil; TAVEIRA, Bruna Daniela de Araujo
. Geoprocessamento: Fundamentos e Técnicas. 1 ed. intersaberes, 2020.
DALL´OGLIO, Pablo. PHP: Programando com Orientação a Objetos. 3 ed. São
Paulo: Novatec Editora, 2015.
DEITEL, Harvey M.. Android: Como Programar. 2 ed. Bookman, 2015.
DEVELOPERS ANDROID. Tudo o que você precisa para criar no
Android. Developers Android. Disponível em:
https://developer.android.com/studio/features?hl=pt-br. Acesso em: 13 nov. 2022.
DEVMEDIA. Introdução ao Java Virtual Machine (JVM). DEVMEDIA. Disponível
em: https://www.devmedia.com.br/introducao-ao-java-virtual-machine-jvm/27624.
Acesso em: 7 nov. 2022.
DEVMEDIA. O que é JSON. DEVMEDIA. 2011. Disponível em:
https://www.devmedia.com.br/o-que-e-json/23166. Acesso em: 16 nov. 2022.
FILHO, Daniel C. de Oliveira. UM PASSO A PASSO PARA A ELABORAÇÃO DO
DIAGRAMA DE CASO DE USO DA UML. Londrina, 2011 Monografia (Pós-
Graduação Engenharia de Software com UML) - Centro Universitário Filadélfia de
Londrina.
GOOGLE DEVELOPERS. Location Manager: Desenvolvedores, Android e
Documentos Referência. Google Developers. 2021. Disponível em:
https://developer.android.com/reference/android/location/LocationManager. Acesso
em: 13 dez. 2022.
GOOGLE DEVELOPERS. Visão geral do MediaPlayer. Developers Android. 2019.
Disponível em: https://developer.android.com/guide/topics/media/mediaplayer?hl=pt-
br. Acesso em: 14 dez. 2022.51
HARRINGTON, Jan L.. Banco de Dados Relacional: Design e Implementação.
Tradução Jan L. Harrington. 4 ed. New York, USA: ELSEVIER, 2016. Tradução de:
Relational Database: Design and Implementation.
JAVA. O que é tecnologia Java e Porque preciso dela?. Java.com. Disponível
em: https://www.java.com/pt-BR/download/help/whatis_java.html. Acesso em: 9 nov.
2022.
LECHETA, Ricardo R.. Google Android: Aprenda a criar aplicações para
dispositivos móveis com o Android SDK. 3 ed. São Paulo: novatec, 2013.
LYRA, Alex Sander. MODELAGEM MATEMÁTICA PARA OTIMIZAÇÃO DA
COLETA E DISTRIBUIÇÃO DE DEJETOS EM BIODIGESTOR CENTRAL.
Botucatu, 2021 Dissertação (Mestre em Agronomia (Energia na agricultura),
Ciências Agronômicas) - Universidade Estadual Paulista Júlio de Mesquita Filho.
MACHADO, Fernando Nery Rodrigues. Banco de Dados: Projeto e Implementação.
3 ed. São Paulo: Saraiva, 2014.
MEURER , FERNANDO. DESENVOLVIMENTO DE UM APLICATIVO PARA A
CRIACÃO DE UM DIÁRIO DE LUGARES UTILIZANDO GPS E IMAGENS DA
CÂMERA DE DISPOSITIVOS MÓVEIS COM ANDROID. Pato Branco,
2012 Trabalho de Conclusão de Curso (Tecnologia em Análise e Desenvolvimento
de Sistemas) - Universidade Tecnológica Federal do Paraná.
MICROSOFT. O que é java?: Um guia para Principiantes do Java| Microsoft
Azure. Microsoft Azure. Disponível em: https://azure.microsoft.com/pt-
pt/resources/cloud-computing-dictionary/what-is-java-programming-language/.
Acesso em: 9 nov. 2022.
MILANI, André. Construindo Aplicações Web com PHP e MySQL. 2 ed. Novatec,
2016.
MORAES, Marcelo Cardozo de . O funcionamento do GPS e a matemática do
Ensino Médio. São Carlos, 2015 Trabalho de Conclusão de Curso (Mestrado
Profissional em Matemática em Rede Nacional - PROFMAT) - Universidade Federal
de São Carlos.
O QUE É BANCO de dados relacional?. AWS Amazon. Disponível em:
https://aws.amazon.com/pt/relational-database/. Acesso em: 9 nov. 2022.
ORACLE. Por que MySQL?. MySQL. 2022. Disponível em:
https://www.mysql.com/why-mysql/. Acesso em: 15 nov. 2022.52
ROUSSEAU, C.; SAINT-AUBIN, Y. Matemática e atualidade volume 1. SBM, 2015.
SANCHES, R. M. Desenvolvimento de um sistema de planejamento de trajetória
para veículos autônomos agrícolas.: Mestrado - Programa de PósGraduação em
Engenharia Mecânica e Área de Concentração em Dinâmica de Máquinas e
Sistemas. São Carlos, 2012 Dissertação (Engenharia Mecânica) - Escola de
Engenharia de São Carlos da Universidade de São Paulo.
SCHILDT, Herbert. Java: The Complete Reference. 7 ed. New York: Mc Graw Hill,
v. 1, 2020.
SILVA, Reginaldo Macedônio. Introdução ao geoprocessamento: conceitos,
técnicas e aplicações. 2 ed. Rio Grande do Sul: Feevale, 2020.
TESSARI, L. G.. APLICATIVO DE LOCALIZAÇÃO DE LUGARES POR GPS PARA
IPHONE. CAXIAS DO SUL, 2010 Trabalho de Conclusão de Curso (Ciência da
Computação) - Universidade de Caxias do Sul.
THE PHP GROUP. Manual do PHP : Referência das Funções e Extensões de
Banco de Dados, Camadas de Abstração e PDO. 2006. Disponível em:
https://www.php.net/manual/pt_BR/intro.pdo.php. Acesso em: 14 nov. 2022.
VANDERHEIDEN, Gregg C. Ubiquitous acces-sibility, common technology core,
and micro assistive technology: Commentary on “computers and people with
disabilities. ACM Transactions on Accessible Comput-ing (TACCESS), v. 1, 2008.
ZANOTTA, Daniel Capella; CAPPELLETTO, Eliane; MATSUOKA, Marcelo Tomio. O
GPS: unindo ciência e tecnologia em aulas de física. Revista Brasileira de Ensino
de Física, v. 33, n. 2. 2313 p, 2011.